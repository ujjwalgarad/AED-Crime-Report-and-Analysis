/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DeptHead;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PoliceEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.PoliceOfficerOrganization;
import Business.WorkQueue.WorkRequest;
import java.awt.BasicStroke;
import java.awt.CardLayout;
import java.awt.Color;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import jxl.Workbook;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.RefineryUtilities;

/**
 *
 * @author ujjwal
 */
public class CrimeReportsSection extends javax.swing.JPanel {

    /**
     * Creates new form CrimeReportsSection
     */
    
    private JPanel upc;
    private EcoSystem system;
    
    public CrimeReportsSection(JPanel upc, EcoSystem system) {
        initComponents();
        this.upc = upc;
        this.system = system;
        dateFrom.getDateEditor().setEnabled(false);
        dateFrom2.getDateEditor().setEnabled(false);
        dateTo.getDateEditor().setEnabled(false);
        dateTo2.getDateEditor().setEnabled(false);
        
        cmbCrimeType.removeAllItems();
        for(Network n : system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                    if(e instanceof PoliceEnterprise){
                        cmbCrimeType.addItem(e);
                    }
                }
            }
        
        cmbEnterprise.removeAllItems();
        for(Network n : system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                    if(e instanceof PoliceEnterprise){
                        cmbEnterprise.addItem(e);
                    }
                }
            }
        
        cmbEnterpriseChart.removeAllItems();
        for(Network n : system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                    if(e instanceof PoliceEnterprise){
                        cmbEnterpriseChart.addItem(e);
                    }
                }
            }
        
        cmbCrimeType2.removeAllItems();
        for(WorkRequest.Type type : WorkRequest.Type.values()){
            cmbCrimeType2.addItem(type);
        }
        
        cmbCrimeTypeChart.removeAllItems();
        for(WorkRequest.Type type : WorkRequest.Type.values()){
            cmbCrimeTypeChart.addItem(type);
        }
        
        cmbCrimeTypePie.removeAllItems();
        for(WorkRequest.Type type : WorkRequest.Type.values()){
            cmbCrimeTypePie.addItem(type);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        cmbEnterpriseChart = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        cmbCrimeTypeChart = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        dateFrom = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        dateTo = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        cmbCrimeType = new javax.swing.JComboBox();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        dateFrom2 = new com.toedter.calendar.JDateChooser();
        dateTo2 = new com.toedter.calendar.JDateChooser();
        jButton9 = new javax.swing.JButton();
        cmbCrimeTypePie = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        cmbCrimeType2 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        btnAll = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        cmbEnterprise = new javax.swing.JComboBox();
        userimg = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setText("Reports and Analysis");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jTabbedPane1.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/DeptHead/3d_bar_chart.png"))); // NOI18N
        jButton6.setText("Overall Request Status vs Count");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/DeptHead/3d_bar_chart.png"))); // NOI18N
        jButton1.setText("Crime Type vs Overall Corresponding Count");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/DeptHead/3d_bar_chart.png"))); // NOI18N
        jButton5.setText("Top 3 Enterprises with Most Crime Cases");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/DeptHead/Untitled.png"))); // NOI18N
        jButton8.setText("Extract All Requests in Excel");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Charts for Specific Selections:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 12), new java.awt.Color(0, 0, 153))); // NOI18N

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/DeptHead/line_chart_analystic_report_10-128.png"))); // NOI18N
        jButton3.setText("Count for All Police Enterprises");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        cmbEnterpriseChart.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/DeptHead/line_chart_analystic_report_10-128.png"))); // NOI18N
        jButton2.setText("Count for All Crime Types");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        cmbCrimeTypeChart.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("Select Crime Type:");

        jLabel10.setText("Select Enterprise:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("For Selected Crime Type:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("For Selected Enterprise:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cmbCrimeTypeChart, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addGap(18, 18, 18)
                            .addComponent(cmbEnterpriseChart, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cmbCrimeTypeChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(cmbEnterpriseChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Bar and Line Charts", jPanel1);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "For Specific Enterprise:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(0, 51, 204))); // NOI18N

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/DeptHead/Pie Chart.png"))); // NOI18N
        jButton4.setText("Show the Pie");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setText("2. From");

        jLabel3.setText("3. To");

        jLabel7.setText("1. Enterprise");

        cmbCrimeType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(dateFrom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbCrimeType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCrimeType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "For Specific Crime Type:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(0, 51, 153))); // NOI18N

        jLabel14.setText("3. To");

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/DeptHead/Pie Chart.png"))); // NOI18N
        jButton9.setText("Show the Pie");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        cmbCrimeTypePie.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("1. Crime Type");

        jLabel13.setText("2. From");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbCrimeTypePie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateFrom2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateTo2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbCrimeTypePie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(dateFrom2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(dateTo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel14))))
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(269, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pie Charts", jPanel2);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Crime Trends:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 3, 14))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("OR");

        cmbCrimeType2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("1. Select the Enterprise");

        btnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/DeptHead/icon_chart_line.png"))); // NOI18N
        btnAll.setText("Show for All Crimes Types");
        btnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllActionPerformed(evt);
            }
        });

        jLabel6.setText("2. Select Crime Type");

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/DeptHead/16-line-chart.png"))); // NOI18N
        jButton7.setText("Show");
        jButton7.setIconTextGap(2);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        cmbEnterprise.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(cmbEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbCrimeType2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel8))
                    .addComponent(btnAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbCrimeType2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(btnAll, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(389, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Trends", jPanel3);

        userimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/DeptHead/main2.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(userimg)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userimg)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        JFreeChart chart = ChartFactory.createBarChart("Crime Type v/s Count", "Crime Type", "No. of Reported Incidents", dataset);
        chart.setBackgroundPaint(Color.LIGHT_GRAY);
        chart.getTitle().setPaint(Color.BLACK);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLUE);
        ChartFrame frame = new ChartFrame("Bar Chart for Crime Types and Corresponding Overall Count", chart);
        frame.setVisible(true);
        frame.setSize(600, 600);
        
        int rape = 0;
        int murder = 0;
        int bankRobbery = 0;
        int gunshot = 0;
        int fraud = 0;
        int hostage = 0;
        int accident = 0;
        int property = 0;
        int burglary = 0;
        
        for(Network n: system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                if(e instanceof PoliceEnterprise){
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        if(o instanceof PoliceOfficerOrganization){
                            for(WorkRequest w: o.getWorkQueue().getWorkRequestList()){
                                switch(w.getCrimeType()){
                                    case "Rape":
                                        rape=rape+1;
                                        break;
                                        
                                    case "Murder":
                                        murder=murder+1;
                                        break;
                                        
                                    case "BankRobbery":
                                        bankRobbery=bankRobbery+1;
                                        break;
                                        
                                    case "Gunshot":
                                        gunshot=gunshot+1;
                                        break;
                                        
                                    case "Fraud":
                                        fraud=fraud+1;
                                        break;
                                        
                                    case "HostageSituation":
                                        hostage=hostage+1;
                                        break;
                                        
                                    case "TrafficAccident":
                                        accident=accident+1;
                                        break;
                                        
                                    case "PropertyMissing":
                                        property=property+1;
                                        break;
                                        
                                    case "Burglary":
                                        burglary=burglary+1;
                                        break;                                        
                                }
                            }
                        }
                    }
                }
            }
        }
        
        
        dataset.setValue(rape, "Values", "Rape");
        dataset.setValue(murder, "Values", "Murder");
        dataset.setValue(bankRobbery, "Values", "Bank Robbery");
        dataset.setValue(gunshot, "Values", "Gunshots Heard");
        dataset.setValue(fraud, "Values", "Fraud");
        dataset.setValue(hostage, "Values", "Hostage Situation");
        dataset.setValue(accident, "Values", "Traffic Accident");
        dataset.setValue(property, "Values", "Property Missing");
        dataset.setValue(burglary, "Values", "Burglary or Theft");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        String type = String.valueOf(cmbEnterpriseChart.getSelectedItem());
         DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        JFreeChart chart = ChartFactory.createLineChart(type, "Enterprise", "No. of Reported Incidents", dataset);
        chart.setBackgroundPaint(Color.LIGHT_GRAY);
        chart.getTitle().setPaint(Color.BLACK);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLUE);
        ChartFrame frame = new ChartFrame("Line Chart for Enterprise Wise Crime Type Count", chart);
        frame.setVisible(true);
        frame.setSize(600, 600);
        
        for(Network n: system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                if(e instanceof PoliceEnterprise){
                    if(e.getName().equals(type)){
                    
                    int rape = 0;
        int murder = 0;
        int bankRobbery = 0;
        int gunshot = 0;
        int fraud = 0;
        int hostage = 0;
        int accident = 0;
        int property = 0;
        int burglary = 0;
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        if(o instanceof PoliceOfficerOrganization){
                            for(WorkRequest w: o.getWorkQueue().getWorkRequestList()){
                                switch(w.getCrimeType()){
                                    case "Rape":
                                        rape=rape+1;
                                        break;
                                        
                                    case "Murder":
                                        murder=murder+1;
                                        break;
                                        
                                    case "BankRobbery":
                                        bankRobbery=bankRobbery+1;
                                        break;
                                        
                                    case "Gunshot":
                                        gunshot=gunshot+1;
                                        break;
                                        
                                    case "Fraud":
                                        fraud=fraud+1;
                                        break;
                                        
                                    case "HostageSituation":
                                        hostage=hostage+1;
                                        break;
                                        
                                    case "TrafficAccident":
                                        accident=accident+1;
                                        break;
                                        
                                    case "PropertyMissing":
                                        property=property+1;
                                        break;
                                        
                                    case "Burglary":
                                        burglary=burglary+1;
                                        break;                                        
                                }
                                
                            }
                        }
                    }
                     dataset.setValue(rape, "Values", "Rape");
        dataset.setValue(murder, "Values", "Murder");
        dataset.setValue(bankRobbery, "Values", "Bank Robbery");
        dataset.setValue(gunshot, "Values", "Gunshots Heard");
        dataset.setValue(fraud, "Values", "Fraud");
        dataset.setValue(hostage, "Values", "Hostage Situation");
        dataset.setValue(accident, "Values", "Traffic Accident");
        dataset.setValue(property, "Values", "Property Missing");
        dataset.setValue(burglary, "Values", "Burglary or Theft");
                    }
                }
 
            }
        }
        
        
        
        /*for(Network n: system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                if(e instanceof PoliceEnterprise){
                    
                    int rape = 0;
        int murder = 0;
        int bankRobbery = 0;
        int gunshot = 0;
        int fraud = 0;
        int hostage = 0;
        int accident = 0;
        int property = 0;
        int burglary = 0;
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        if(o instanceof PoliceOfficerOrganization){
                            for(WorkRequest w: o.getWorkQueue().getWorkRequestList()){
                                switch(w.getCrimeType()){
                                    case "Rape":
                                        rape=rape+1;
                                        break;
                                        
                                    case "Murder":
                                        murder=murder+1;
                                        break;
                                        
                                    case "Bank Robbery":
                                        bankRobbery=bankRobbery+1;
                                        break;
                                        
                                    case "Gunshots Heard":
                                        gunshot=gunshot+1;
                                        break;
                                        
                                    case "Fraud":
                                        fraud=fraud+1;
                                        break;
                                        
                                    case "Hostage Situation":
                                        hostage=hostage+1;
                                        break;
                                        
                                    case "Traffic Accident":
                                        accident=accident+1;
                                        break;
                                        
                                    case "Property Missing":
                                        property=property+1;
                                        break;
                                        
                                    case "Burglary or Theft":
                                        burglary=burglary+1;
                                        break;                                        
                                }
                            }
                        }
                    }
                    DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        JFreeChart chart = ChartFactory.createLineChart(e.getName(), "Crime Type", "No. of Reported Incidents", dataset);
        chart.setBackgroundPaint(Color.LIGHT_GRAY);
        chart.getTitle().setPaint(Color.BLACK);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLUE);
        ChartFrame frame = new ChartFrame("Line Chart for Enterprise Wise Crime Type Count", chart);
        frame.setVisible(true);
        frame.setSize(600, 600);
                dataset.setValue(rape, "Values", "Rape");
        dataset.setValue(murder, "Values", "Murder");
        dataset.setValue(bankRobbery, "Values", "Bank Robbery");
        dataset.setValue(gunshot, "Values", "Gunshots Heard");
        dataset.setValue(fraud, "Values", "Fraud");
        dataset.setValue(hostage, "Values", "Hostage Situation");
        dataset.setValue(accident, "Values", "Traffic Accident");
        dataset.setValue(property, "Values", "Property Missing");
        dataset.setValue(burglary, "Values", "Burglary or Theft");
                
                
                }
            }
        }  */      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        String type = String.valueOf(cmbCrimeTypeChart.getSelectedItem());
         DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        JFreeChart chart = ChartFactory.createLineChart(type, "Enterprise", "No. of Reported Incidents", dataset);
        chart.setBackgroundPaint(Color.LIGHT_GRAY);
        chart.getTitle().setPaint(Color.BLACK);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLUE);
        ChartFrame frame = new ChartFrame("Line Chart for Enterprise Wise Crime Type Count", chart);
        frame.setVisible(true);
        frame.setSize(600, 600);
        
        for(Network n: system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                if(e instanceof PoliceEnterprise){
                    
                    int crimeCount = 0;
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        if(o instanceof PoliceOfficerOrganization){
                            for(WorkRequest w: o.getWorkQueue().getWorkRequestList()){
                                if(w.getCrimeType().equals(type)){
                                    crimeCount = crimeCount+1;
                                }
                                
                            }
                        }
                    }
                     dataset.setValue(crimeCount, "Values", e.getName());            
                }
 
            }
        }
        
        
        /*DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        String crimeType = String.valueOf(cmbCrimeTypeChart.getSelectedItem());
        
        for(Network n : system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                if(e instanceof PoliceEnterprise){
                int crimeCount = 0;    
                
        for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
            if(o instanceof PoliceOfficerOrganization){
                for(WorkRequest w: o.getWorkQueue().getWorkRequestList()){
                    if(w.getCrimeType().equals(crimeType)){
                        crimeCount = crimeCount+1;
                }
            }
          }
        }
        
        JFreeChart chart = ChartFactory.createLineChart("Crime Trend for "+crimeType, "Month", "No. of reported crimes", dataset);
        chart.setBackgroundPaint(Color.LIGHT_GRAY);
        chart.getTitle().setPaint(Color.BLACK);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLUE);
        ChartFrame frame = new ChartFrame("Crime Trend for "+crimeType, chart);
        frame.setVisible(true);
        frame.setSize(600, 600);
        dataset.setValue(crimeCount, "Values", e.getName());
        
                }
            }
        }*/
    
        
        
        
        
        
        /*String crimeType = String.valueOf(cmbCrimeTypeChart.getSelectedItem());
        
        //for(WorkRequest.Type type : WorkRequest.Type.values()){
            
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        JFreeChart chart = ChartFactory.createLineChart(String.valueOf(crimeType), "Police Enterprise", "No. of reported crimes", dataset);
        chart.setBackgroundPaint(Color.LIGHT_GRAY);
        chart.getTitle().setPaint(Color.BLACK);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLUE);
        ChartFrame frame = new ChartFrame("Line Chart for Count of " + crimeType, chart);
        frame.setVisible(true);
        frame.setSize(600, 600);
        
            for(Network n: system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                int crimeCount = 0;
                if(e instanceof PoliceEnterprise){
                    
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        if(o instanceof PoliceOfficerOrganization){
                            for(WorkRequest w: o.getWorkQueue().getWorkRequestList()){
                                if(w.getCrimeType().equals(crimeType)){
                                    crimeCount = crimeCount+1;
                                }
                            }
                }
            }
                 dataset.setValue(crimeCount, "Values", e.getName());   
          }  
                
        }*/
                    
            
            
        
        
        
        
/*        for(Network n: system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                if(e instanceof PoliceEnterprise){
                    
                    int rape = 0;
        int murder = 0;
        int bankRobbery = 0;
        int gunshot = 0;
        int fraud = 0;
        int hostage = 0;
        int accident = 0;
        int property = 0;
        int burglary = 0;
        
        String name = e.getName();
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        if(o instanceof PoliceOfficerOrganization){
                            for(WorkRequest w: o.getWorkQueue().getWorkRequestList()){
                                switch(w.getCrimeType()){
                                    case "Rape":
                                        rape=rape+1;
                                        break;
                                        
                                    case "Murder":
                                        murder=murder+1;
                                        break;
                                        
                                    case "Bank Robbery":
                                        bankRobbery=bankRobbery+1;
                                        break;
                                        
                                    case "Gunshots Heard":
                                        gunshot=gunshot+1;
                                        break;
                                        
                                    case "Fraud":
                                        fraud=fraud+1;
                                        break;
                                        
                                    case "Hostage Situation":
                                        hostage=hostage+1;
                                        break;
                                        
                                    case "Traffic Accident":
                                        accident=accident+1;
                                        break;
                                        
                                    case "Property Missing":
                                        property=property+1;
                                        break;
                                        
                                    case "Burglary or Theft":
                                        burglary=burglary+1;
                                        break;                                        
                                }
                            }
                        }
                    }
                    
        
        dataset.setValue(murder, "Values", "Murder");
        dataset.setValue(bankRobbery, "Values", "Bank Robbery");
        dataset.setValue(gunshot, "Values", "Gunshots Heard");
        dataset.setValue(fraud, "Values", "Fraud");
        dataset.setValue(hostage, "Values", "Hostage Situation");
        dataset.setValue(accident, "Values", "Traffic Accident");
        dataset.setValue(property, "Values", "Property Missing");
        dataset.setValue(burglary, "Values", "Burglary or Theft");
                
                
                }
            }
        }
        */
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        Date from = dateFrom.getDate();
        Date to = dateTo.getDate();
        
        //WorkRequest.Type area = (Type)cmbCrimeType.getSelectedItem();
        Enterprise area = (PoliceEnterprise) cmbCrimeType.getSelectedItem();
        
        
        if(from == null || to == null){
            JOptionPane.showMessageDialog(null,"Please provide both, From as well as To, dates");
            return;
        }
        for(Network n: system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                if(e instanceof PoliceEnterprise && e.getName().equals(area.getName())){
                    
                    
                    int rape = 0;
        int murder = 0;
        int bankRobbery = 0;
        int gunshot = 0;
        int fraud = 0;
        int hostage = 0;
        int accident = 0;
        int property = 0;
        int burglary = 0;
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        if(o instanceof PoliceOfficerOrganization){
                            for(WorkRequest w: o.getWorkQueue().getWorkRequestList()){
                                if(w.getCrimeDate().after(from) && w.getCrimeDate().before(to)){
                                switch(w.getCrimeType()){
                                    case "Rape":
                                        rape=rape+1;
                                        break;
                                        
                                    case "Murder":
                                        murder=murder+1;
                                        break;
                                        
                                    case "BankRobbery":
                                        bankRobbery=bankRobbery+1;
                                        break;
                                        
                                    case "Gunshot":
                                        gunshot=gunshot+1;
                                        break;
                                        
                                    case "Fraud":
                                        fraud=fraud+1;
                                        break;
                                        
                                    case "HostageSituation":
                                        hostage=hostage+1;
                                        break;
                                        
                                    case "TrafficAccident":
                                        accident=accident+1;
                                        break;
                                        
                                    case "PropertyMissing":
                                        property=property+1;
                                        break;
                                        
                                    case "BurglaryTheft":
                                        burglary=burglary+1;
                                        break;                                        
                                }
                                }
                            }
                        }
                    }
        
                    
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        
        if(rape!=0)
        pieDataset.setValue("Rape",rape);
        if(murder!=0)
        pieDataset.setValue("Murder",murder);
        if(bankRobbery!=0)
        pieDataset.setValue("Bank Robbery",bankRobbery);
        if(gunshot!=0)
        pieDataset.setValue("Gunshots",gunshot);
        if(fraud!=0)
        pieDataset.setValue("Fraud",fraud);
        if(hostage!=0)
        pieDataset.setValue("Hostage Situation",hostage);
        if(accident!=0)
        pieDataset.setValue("Traffic Accident",accident);
        if(property!=0)
        pieDataset.setValue("Property Missing",property);
        if(burglary!=0)
        pieDataset.setValue("Burglary or Theft",burglary);
        
        JFreeChart chart = ChartFactory.createPieChart("MyPieChart",pieDataset,true, true, true);
        PiePlot p = (PiePlot)chart.getPlot();
        //p.setForegroundAlpha(TOP_ALIGNMENT);
        ChartFrame frame = new ChartFrame("pie chart", chart);
        frame.setVisible(true);
        frame.setSize(450,450);
                }
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        JFreeChart chart = ChartFactory.createBarChart("Crime Counts of Top 3 Enterprises", "Enterprise", "No. of reported crimes", dataset);
        chart.setBackgroundPaint(Color.LIGHT_GRAY);
        chart.getTitle().setPaint(Color.BLACK);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLUE);
        ChartFrame frame = new ChartFrame("Bar Chart for Top 3 Enterprises with Most Crimes", chart);
        frame.setVisible(true);
        frame.setSize(600, 600);
        
        int one=0;
        int two=0;
        int three=0;
        
        String orgOne=null;
        String orgTwo=null;
        String orgThree=null;
        
        for(Network n : system.getNetworkList()){
            for(Enterprise e: n.getEnterpriseDirectory().getEnterpriseList()){
                int temp = 0;
                if(e instanceof PoliceEnterprise){
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        
                        if(o instanceof PoliceOfficerOrganization){
                            for(WorkRequest w: o.getWorkQueue().getWorkRequestList()){
                                temp = temp+1;
                            }
                        }
                        
                        
                    }                   
                }
                if(temp>one){
                            three=two;
                            two=one;
                            one=temp;
                            orgThree = orgTwo;
                            orgTwo=orgOne;
                            orgOne=e.getName();
                        }
                        if(temp<one && temp>two){
                            three=two;
                            two=temp;
                            orgThree = orgTwo;
                            orgTwo=e.getName();
                        }
                        if(temp<one && temp>three){
                            three=temp;
                            orgThree = e.getName();
                        }
            }
        }

        dataset.setValue(one, "Values", orgOne  == null ? "" : orgOne);
        dataset.setValue(two, "Values", orgTwo == null ? "" : orgTwo);
        dataset.setValue(three, "Values", orgThree == null ? "" : orgThree);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        upc.remove(this);
        CardLayout layout = (CardLayout)upc.getLayout();
        layout.previous(upc);
    }//GEN-LAST:event_btnBackActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        JFreeChart chart = ChartFactory.createBarChart("Overall Status Wise Count", "Status", "No. of Reported Incidents", dataset);
        chart.setBackgroundPaint(Color.LIGHT_GRAY);
        chart.getTitle().setPaint(Color.BLACK);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLUE);
        ChartFrame frame = new ChartFrame("Bar Chart for Overall Status Wise Count", chart);
        frame.setVisible(true);
        frame.setSize(600, 600);
        
        int awaiting = 0;
        int withPolice = 0;
        int closed = 0;
        int cancelled = 0;
        int  thorough= 0;
        int head = 0;
        
        
        for(Network n: system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                if(e instanceof PoliceEnterprise){
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        if(o instanceof PoliceOfficerOrganization){
                            for(WorkRequest w: o.getWorkQueue().getWorkRequestList()){
                                switch(w.getCaseSatus()){
                                    case ("AwaitingResponse"):
                                        awaiting=awaiting+1;
                                        break;
                                        
                                    case "WithPoliceDept":
                                        withPolice=withPolice+1;
                                        break;
                                        
                                    case "Closed":
                                        closed=closed+1;
                                        break;
                                        
                                    case "WithDeptHead":
                                        head = head+1;
                                        
                                    case "Cancelled":
                                        cancelled=cancelled+1;
                                        break;
                                        
                                    case "NeedsThoroughInvestigation":
                                        thorough=thorough+1;
                                        break;                                        
                                }
                            }
                        }
                    }
                }
            }
        }
         
        dataset.setValue(awaiting, "Values", "Awaiting Response");
        dataset.setValue(withPolice, "Values", "With Police Dept");
        dataset.setValue(closed, "Values", "Closed");
        dataset.setValue(cancelled, "Values", "Cancelled by Dept");
        dataset.setValue(thorough, "Values", "Needs Investigation");
        dataset.setValue(head, "Values", "WithDeptHead");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        

        int jan=0;
        int feb=0;
        int mar=0;
        int apr=0;
        int may=0;
        int jun=0;
        int jul=0;
        int aug=0;
        int sep=0;
        int oct=0;
        int nov=0;
        int dec=0;
        
        Enterprise e = (Enterprise)cmbEnterprise.getSelectedItem();
        String crimeType = String.valueOf(cmbCrimeType2.getSelectedItem());
        
        for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
            if(o instanceof PoliceOfficerOrganization){
                for(WorkRequest w: o.getWorkQueue().getWorkRequestList()){
                    if(w.getCrimeType().equals(crimeType)){
                        if(w.getCrimeDate().getMonth()==0)
                        jan=jan+1;
                        if(w.getCrimeDate().getMonth()==1)
                        feb=feb+1;
                        if(w.getCrimeDate().getMonth()==2)
                        mar=mar+1;
                        if(w.getCrimeDate().getMonth()==3)
                        apr=apr+1;
                        if(w.getCrimeDate().getMonth()==4)
                        may=may+1;
                        if(w.getCrimeDate().getMonth()==5)
                        jun=jun+1;
                        if(w.getCrimeDate().getMonth()==6)
                        jul=jul+1;
                        if(w.getCrimeDate().getMonth()==7)
                        aug=aug+1;
                        if(w.getCrimeDate().getMonth()==8)
                        sep=sep+1;
                        if(w.getCrimeDate().getMonth()==9)
                        oct=oct+1;
                        if(w.getCrimeDate().getMonth()==10)
                        nov=nov+1;
                        if(w.getCrimeDate().getMonth()==11)
                        dec=dec+1;
                }
            }
          }
        }
        JFreeChart chart = ChartFactory.createLineChart("Crime Trend for "+crimeType + " in " +e.getName(), "Month", "No. of reported crimes", dataset);
        chart.setBackgroundPaint(Color.LIGHT_GRAY);
        chart.getTitle().setPaint(Color.BLACK);
        CategoryPlot p = chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.BLUE);
        ChartFrame frame = new ChartFrame("Crime Trend for "+crimeType, chart);
        frame.setVisible(true);
        frame.setSize(600, 600);
        dataset.setValue(jan, "Values", "Jan");
        dataset.setValue(feb, "Values", "Feb");
        dataset.setValue(mar, "Values", "Mar");
        dataset.setValue(apr, "Values", "Apr");
        dataset.setValue(may, "Values", "May");
        dataset.setValue(jun, "Values", "Jun");
        dataset.setValue(jul, "Values", "Jul");
        dataset.setValue(aug, "Values", "Aug");
        dataset.setValue(sep, "Values", "Sep");
        dataset.setValue(oct, "Values", "Oct");
        dataset.setValue(nov, "Values", "Nov");
        dataset.setValue(dec, "Values", "Dec");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        File f = new File("data\\AllWorkRequests.xls");
        try {
            WritableWorkbook allWorkReq = Workbook.createWorkbook(f);
            WritableSheet mySheet = allWorkReq.createSheet("All Work Requests",0);
            int i=0;
            
                                    Label l = new Label(0,i,"Network");
                                   Label l1 = new Label(1,i,"Enterprise");
                                   Label l2 = new Label(2,i,"Organization");
                                   Label l3 = new Label(3,i,"Sender");
                                   Label l4 = new Label(4,i,"Receiver");
                                   Label l5 = new Label(5,i,"Work Req Date");
                                   Label l6 = new Label(6,i,"Reporting Address");
                                   Label l7 = new Label(7,i,"Crime Date");
                                   Label l8 = new Label(8,i,"Crime Type");
                                   Label l9 = new Label(9,i,"Crime Details");
                                   Label l10 = new Label(10,i,"Work Req Status");
                                   Label l11 = new Label(11,i,"Resolved Date");
                                   Label l12 = new Label(12,i,"Case Note");
                                   Label l13 = new Label(13,i,"Status Report");
                                   Label l14 = new Label(14,i,"Msg to Hosp");
                                   Label l15 = new Label(15,i,"Msg from Hosp");
                                   Label l16 = new Label(16,i,"Msg to FireFighter");
                                   Label l17 = new Label(17,i,"Msg from FireFighter");
                                   Label l18 = new Label(18,i,"Msg to Dept Head");
                                   Label l19 = new Label(19,i,"Msg from Dept Head");
                                   
                                   mySheet.addCell(l);
                                   mySheet.addCell(l1);
                                   mySheet.addCell(l2);
                                   mySheet.addCell(l3);
                                   mySheet.addCell(l4);
                                   mySheet.addCell(l5);
                                   mySheet.addCell(l6);
                                   mySheet.addCell(l7);
                                   mySheet.addCell(l8);
                                   mySheet.addCell(l9);
                                   mySheet.addCell(l10);
                                   mySheet.addCell(l11);
                                   mySheet.addCell(l12);
                                   mySheet.addCell(l13);
                                   mySheet.addCell(l14);
                                   mySheet.addCell(l15);
                                   mySheet.addCell(l16);
                                   mySheet.addCell(l17);
                                   mySheet.addCell(l18);
                                   mySheet.addCell(l19);
                                   
                                   i++;
            
            for(Network n : system.getNetworkList()){
                for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                    if(e instanceof PoliceEnterprise){
                        for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                            if(o instanceof PoliceOfficerOrganization){
                               for(WorkRequest w: o.getWorkQueue().getWorkRequestList()){

                                   l = new Label(0,i,n.getName());
                                   l1 = new Label(1,i,e.getName());
                                   l2 = new Label(2,i,o.getName());
                                   l3 = new Label(3,i,w.getSender().getUsername());
                                   l4 = new Label(4,i,w.getReceiver().getUsername());
                                   l5 = new Label(5,i,String.valueOf(w.getWorkReqId()));
                                   l6 = new Label(6,i,w.getReportingAddress());
                                   l7 = new Label(7,i,String.valueOf(w.getCrimeDate()));
                                   l8 = new Label(8,i,w.getCrimeType());
                                   l9 = new Label(9,i,w.getCaseDetails());
                                   l10 = new Label(10,i,w.getCaseSatus());
                                   l11 = new Label(11,i,String.valueOf(w.getResolveDate()));
                                   l12 = new Label(12,i,w.getCrimeCase().getCaseNote());
                                   l13 = new Label(13,i,w.getCrimeCase().getStatusReport());
                                   l14 = new Label(14,i,w.getMsgHosp());
                                   l15 = new Label(15,i,w.getRemarkHosp());
                                   l16 = new Label(16,i,w.getMsgFF());
                                   l17 = new Label(17,i,w.getRemarkFF());
                                   l18 = new Label(18,i,w.getMsgDeptHead());
                                   l19 = new Label(19,i,w.getRemarkDeptHead());                                   
                                   
                                   mySheet.addCell(l);
                                   mySheet.addCell(l1);
                                   mySheet.addCell(l2);
                                   mySheet.addCell(l3);
                                   mySheet.addCell(l4);
                                   mySheet.addCell(l5);
                                   mySheet.addCell(l6);
                                   mySheet.addCell(l7);
                                   mySheet.addCell(l8);
                                   mySheet.addCell(l9);
                                   mySheet.addCell(l10);
                                   mySheet.addCell(l11);
                                   mySheet.addCell(l12);
                                   mySheet.addCell(l13);
                                   mySheet.addCell(l14);
                                   mySheet.addCell(l15);
                                   mySheet.addCell(l16);
                                   mySheet.addCell(l17);
                                   mySheet.addCell(l18);
                                   mySheet.addCell(l19);
                                   
                                   i++;
            }
            }
            }
            }
            }
            }
            
            allWorkReq.write();
            allWorkReq.close();
            JOptionPane.showMessageDialog(null,"Data has been extracted in 'data/AllWorkRequests.xls' file");
            
        } catch (IOException ex) {
            Logger.getLogger(CrimeReportsSection.class.getName()).log(Level.SEVERE, null, ex);
        } catch (WriteException ex) {
            Logger.getLogger(CrimeReportsSection.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton8ActionPerformed
    
    private void btnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllActionPerformed
        // TODO add your handling code here:
      Enterprise e = (Enterprise)cmbEnterprise.getSelectedItem();
      XYLineChart_AWT chart = new XYLineChart_AWT("Crime Trends in" + e.getName(), "Crime Trends", e );
      chart.pack( );          
      RefineryUtilities.centerFrameOnScreen( chart );          
      chart.setVisible( true );       
    }//GEN-LAST:event_btnAllActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        Date from = dateFrom2.getDate();
        Date to = dateTo2.getDate();
        
        //WorkRequest.Type area = (Type)cmbCrimeType.getSelectedItem();
        String type =  String.valueOf(cmbCrimeTypePie.getSelectedItem());
        
        
        if(from == null || to == null){
            JOptionPane.showMessageDialog(null,"Please provide both, From as well as To, dates");
            return;
        }
        
         DefaultPieDataset pieDataset = new DefaultPieDataset();
         JFreeChart chart = ChartFactory.createPieChart("MyPieChart",pieDataset,true, true, true);
        PiePlot p = (PiePlot)chart.getPlot();
        //p.setForegroundAlpha(TOP_ALIGNMENT);
        ChartFrame frame = new ChartFrame("pie chart", chart);
        frame.setVisible(true);
        frame.setSize(450,450);
        
        
         
        for(Network n: system.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                
            
                if(e instanceof PoliceEnterprise){
                    int count =0;
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                        if(o instanceof PoliceOfficerOrganization){
                            for(WorkRequest w : o.getWorkQueue().getWorkRequestList()){
                                if(w.getCrimeDate().after(from) && w.getCrimeDate().before(to)){
                                if(w.getCrimeType().equals(type)){
                                    count =count+1;
                                }
                            }
                            }
                        }
                    }
                    if(count!=0)
                    pieDataset.setValue(e.getName(),count);
                }
                
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAll;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox cmbCrimeType;
    private javax.swing.JComboBox cmbCrimeType2;
    private javax.swing.JComboBox cmbCrimeTypeChart;
    private javax.swing.JComboBox cmbCrimeTypePie;
    private javax.swing.JComboBox cmbEnterprise;
    private javax.swing.JComboBox cmbEnterpriseChart;
    private com.toedter.calendar.JDateChooser dateFrom;
    private com.toedter.calendar.JDateChooser dateFrom2;
    private com.toedter.calendar.JDateChooser dateTo;
    private com.toedter.calendar.JDateChooser dateTo2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel userimg;
    // End of variables declaration//GEN-END:variables
}
